pub use mev_wallet_v0::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod mev_wallet_v0 {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"ExactBaseFee\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"HighBaseFee\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"MissingNonce\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\",\"components\":[]}],\"type\":\"error\",\"name\":\"NotBefore\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"PermanentlyInvalid\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"ProvideValue\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\",\"components\":[]}],\"type\":\"error\",\"name\":\"Reverted\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"UsedNonce\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"type\":\"error\",\"name\":\"WrongSigner\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Executed\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"fallback\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"TX_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"_DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"initialize\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"bool\",\"name\":\"delegate\",\"type\":\"bool\",\"components\":[]},{\"internalType\":\"int256\",\"name\":\"tip\",\"type\":\"int256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"maxBaseFee\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"timing\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\",\"components\":[]},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"mevTx\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferOwnership\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"receive\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static MEVWALLETV0_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        128,
        96,
        64,
        82,
        52,
        97,
        0,
        41,
        87,
        96,
        1,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        255,
        23,
        144,
        85,
        97,
        13,
        193,
        144,
        129,
        97,
        0,
        47,
        130,
        57,
        243,
        91,
        96,
        0,
        128,
        253,
        254,
        96,
        128,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        21,
        97,
        0,
        26,
        87,
        91,
        80,
        54,
        21,
        97,
        0,
        24,
        87,
        0,
        91,
        0,
        91,
        96,
        0,
        144,
        129,
        53,
        96,
        224,
        28,
        144,
        129,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        11,
        158,
        87,
        80,
        128,
        99,
        174,
        96,
        78,
        69,
        20,
        97,
        11,
        69,
        87,
        128,
        99,
        175,
        254,
        208,
        224,
        20,
        97,
        11,
        9,
        87,
        128,
        99,
        196,
        214,
        109,
        232,
        20,
        97,
        9,
        99,
        87,
        128,
        99,
        220,
        12,
        129,
        181,
        20,
        97,
        9,
        40,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        8,
        110,
        87,
        99,
        243,
        25,
        134,
        118,
        3,
        97,
        0,
        15,
        87,
        97,
        1,
        96,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        97,
        0,
        163,
        97,
        11,
        238,
        86,
        91,
        144,
        96,
        36,
        53,
        145,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        17,
        97,
        8,
        106,
        87,
        54,
        96,
        35,
        132,
        1,
        18,
        21,
        97,
        8,
        106,
        87,
        130,
        96,
        4,
        1,
        53,
        97,
        0,
        208,
        129,
        97,
        12,
        154,
        86,
        91,
        147,
        97,
        0,
        222,
        96,
        64,
        81,
        149,
        134,
        97,
        12,
        89,
        86,
        91,
        129,
        133,
        82,
        54,
        96,
        36,
        131,
        131,
        1,
        1,
        17,
        97,
        8,
        98,
        87,
        129,
        132,
        146,
        96,
        36,
        96,
        32,
        147,
        1,
        131,
        136,
        1,
        55,
        133,
        1,
        1,
        82,
        96,
        100,
        53,
        21,
        21,
        146,
        131,
        96,
        100,
        53,
        3,
        97,
        8,
        102,
        87,
        97,
        1,
        4,
        53,
        144,
        96,
        255,
        130,
        22,
        130,
        3,
        97,
        8,
        98,
        87,
        96,
        132,
        53,
        148,
        97,
        1,
        44,
        96,
        68,
        53,
        135,
        97,
        13,
        57,
        86,
        91,
        146,
        58,
        72,
        3,
        97,
        8,
        56,
        87,
        90,
        150,
        131,
        81,
        96,
        32,
        133,
        1,
        32,
        146,
        96,
        64,
        81,
        147,
        127,
        253,
        76,
        156,
        156,
        238,
        168,
        84,
        130,
        195,
        103,
        22,
        38,
        247,
        177,
        198,
        91,
        194,
        35,
        3,
        37,
        184,
        109,
        188,
        176,
        249,
        113,
        50,
        124,
        48,
        98,
        194,
        106,
        96,
        32,
        134,
        1,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        136,
        22,
        96,
        64,
        134,
        1,
        82,
        96,
        96,
        133,
        1,
        82,
        96,
        68,
        53,
        96,
        128,
        133,
        1,
        82,
        96,
        160,
        132,
        1,
        82,
        96,
        192,
        131,
        1,
        82,
        96,
        164,
        53,
        96,
        224,
        131,
        1,
        82,
        96,
        196,
        53,
        97,
        1,
        0,
        131,
        1,
        82,
        97,
        1,
        32,
        96,
        228,
        53,
        129,
        132,
        1,
        82,
        130,
        82,
        129,
        97,
        1,
        64,
        129,
        1,
        16,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        97,
        1,
        64,
        132,
        1,
        17,
        23,
        97,
        8,
        11,
        87,
        97,
        1,
        64,
        130,
        1,
        96,
        64,
        129,
        144,
        82,
        130,
        81,
        96,
        32,
        132,
        1,
        32,
        135,
        84,
        127,
        25,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        1,
        96,
        134,
        1,
        82,
        97,
        1,
        98,
        133,
        1,
        82,
        97,
        1,
        130,
        132,
        1,
        82,
        96,
        66,
        129,
        82,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        97,
        1,
        192,
        132,
        1,
        144,
        129,
        17,
        145,
        17,
        23,
        97,
        8,
        11,
        87,
        96,
        128,
        97,
        1,
        192,
        131,
        96,
        255,
        137,
        148,
        131,
        96,
        32,
        151,
        1,
        96,
        64,
        82,
        97,
        1,
        64,
        131,
        1,
        81,
        97,
        1,
        96,
        132,
        1,
        32,
        132,
        132,
        1,
        82,
        22,
        97,
        1,
        224,
        130,
        1,
        82,
        97,
        1,
        36,
        53,
        97,
        2,
        0,
        130,
        1,
        82,
        97,
        1,
        68,
        53,
        97,
        2,
        32,
        130,
        1,
        82,
        131,
        128,
        82,
        1,
        96,
        1,
        90,
        250,
        21,
        97,
        8,
        0,
        87,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        132,
        81,
        22,
        128,
        21,
        97,
        7,
        24,
        87,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        1,
        84,
        22,
        129,
        3,
        97,
        7,
        207,
        87,
        80,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        21,
        97,
        7,
        24,
        87,
        96,
        164,
        53,
        21,
        21,
        128,
        97,
        7,
        196,
        87,
        91,
        97,
        7,
        146,
        87,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        66,
        22,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        196,
        53,
        22,
        144,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        196,
        53,
        96,
        64,
        28,
        22,
        145,
        128,
        21,
        21,
        144,
        129,
        97,
        7,
        136,
        87,
        91,
        80,
        97,
        7,
        24,
        87,
        129,
        128,
        21,
        21,
        145,
        130,
        97,
        7,
        126,
        87,
        91,
        80,
        80,
        97,
        7,
        77,
        87,
        80,
        131,
        96,
        68,
        53,
        18,
        97,
        7,
        24,
        87,
        96,
        100,
        53,
        128,
        97,
        7,
        66,
        87,
        91,
        97,
        7,
        24,
        87,
        131,
        96,
        68,
        53,
        19,
        128,
        97,
        7,
        12,
        87,
        91,
        97,
        6,
        218,
        87,
        96,
        2,
        84,
        128,
        96,
        228,
        53,
        16,
        97,
        6,
        169,
        87,
        128,
        96,
        228,
        53,
        17,
        97,
        6,
        120,
        87,
        80,
        131,
        128,
        145,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        148,
        133,
        96,
        2,
        85,
        129,
        96,
        100,
        53,
        96,
        0,
        20,
        97,
        6,
        94,
        87,
        80,
        96,
        32,
        130,
        81,
        146,
        1,
        144,
        90,
        244,
        97,
        3,
        180,
        97,
        13,
        132,
        86,
        91,
        144,
        91,
        21,
        97,
        5,
        203,
        87,
        80,
        96,
        1,
        96,
        228,
        53,
        1,
        128,
        96,
        228,
        53,
        17,
        97,
        5,
        113,
        87,
        96,
        2,
        85,
        96,
        228,
        53,
        127,
        188,
        246,
        166,
        138,
        47,
        144,
        27,
        228,
        162,
        58,
        65,
        181,
        58,
        205,
        118,
        151,
        137,
        58,
        126,
        52,
        222,
        244,
        226,
        138,
        203,
        165,
        132,
        218,
        117,
        40,
        59,
        103,
        132,
        128,
        162,
        90,
        132,
        3,
        147,
        132,
        17,
        97,
        5,
        158,
        87,
        131,
        58,
        2,
        147,
        58,
        133,
        4,
        20,
        58,
        21,
        23,
        21,
        97,
        5,
        158,
        87,
        130,
        147,
        97,
        4,
        26,
        145,
        97,
        13,
        57,
        86,
        91,
        144,
        130,
        130,
        19,
        21,
        97,
        4,
        165,
        87,
        80,
        110,
        140,
        67,
        239,
        192,
        20,
        116,
        108,
        35,
        0,
        73,
        227,
        48,
        3,
        156,
        179,
        144,
        129,
        59,
        21,
        97,
        4,
        161,
        87,
        130,
        145,
        96,
        36,
        131,
        146,
        96,
        64,
        81,
        148,
        133,
        147,
        132,
        146,
        127,
        89,
        146,
        191,
        221,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        82,
        96,
        4,
        132,
        1,
        82,
        90,
        241,
        128,
        21,
        97,
        4,
        150,
        87,
        97,
        4,
        131,
        87,
        80,
        80,
        128,
        243,
        91,
        97,
        4,
        140,
        144,
        97,
        12,
        22,
        86,
        91,
        97,
        4,
        147,
        87,
        128,
        243,
        91,
        128,
        253,
        91,
        96,
        64,
        81,
        61,
        132,
        130,
        62,
        61,
        144,
        253,
        91,
        80,
        80,
        253,
        91,
        145,
        129,
        144,
        3,
        145,
        127,
        128,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        20,
        96,
        1,
        22,
        97,
        5,
        113,
        87,
        130,
        5,
        3,
        97,
        5,
        68,
        87,
        129,
        144,
        110,
        140,
        67,
        239,
        192,
        20,
        116,
        108,
        35,
        0,
        73,
        227,
        48,
        3,
        156,
        179,
        128,
        59,
        21,
        97,
        4,
        161,
        87,
        96,
        36,
        131,
        146,
        96,
        64,
        81,
        148,
        133,
        147,
        132,
        146,
        127,
        248,
        229,
        193,
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        82,
        96,
        4,
        132,
        1,
        82,
        90,
        241,
        128,
        21,
        97,
        4,
        150,
        87,
        97,
        5,
        56,
        87,
        80,
        128,
        243,
        91,
        97,
        5,
        65,
        144,
        97,
        12,
        22,
        86,
        91,
        128,
        243,
        91,
        96,
        36,
        130,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        17,
        96,
        4,
        82,
        253,
        91,
        96,
        36,
        132,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        17,
        96,
        4,
        82,
        253,
        91,
        96,
        36,
        131,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        17,
        96,
        4,
        82,
        253,
        91,
        131,
        144,
        96,
        64,
        81,
        128,
        146,
        127,
        168,
        21,
        153,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        32,
        96,
        4,
        131,
        1,
        82,
        130,
        81,
        146,
        131,
        96,
        36,
        132,
        1,
        82,
        129,
        91,
        132,
        129,
        16,
        97,
        6,
        70,
        87,
        80,
        80,
        96,
        31,
        131,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        146,
        96,
        68,
        128,
        150,
        134,
        1,
        1,
        82,
        1,
        22,
        129,
        1,
        3,
        1,
        144,
        253,
        91,
        96,
        32,
        130,
        130,
        1,
        129,
        1,
        81,
        96,
        68,
        136,
        132,
        1,
        1,
        82,
        134,
        148,
        80,
        1,
        97,
        6,
        7,
        86,
        91,
        128,
        81,
        146,
        80,
        96,
        32,
        1,
        144,
        52,
        144,
        90,
        241,
        97,
        6,
        114,
        97,
        13,
        132,
        86,
        91,
        144,
        97,
        3,
        182,
        86,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        41,
        154,
        167,
        49,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        106,
        201,
        100,
        176,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        96,
        36,
        96,
        64,
        81,
        127,
        115,
        136,
        51,
        135,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        68,
        53,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        80,
        96,
        68,
        53,
        52,
        20,
        21,
        97,
        3,
        84,
        86,
        91,
        96,
        4,
        96,
        64,
        81,
        127,
        160,
        77,
        152,
        31,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        253,
        91,
        80,
        96,
        68,
        53,
        21,
        21,
        97,
        3,
        69,
        86,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        8,
        86,
        126,
        85,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        16,
        144,
        80,
        129,
        56,
        97,
        3,
        44,
        86,
        91,
        144,
        80,
        129,
        17,
        56,
        97,
        3,
        28,
        86,
        91,
        96,
        36,
        96,
        64,
        81,
        127,
        116,
        135,
        141,
        88,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        164,
        53,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        80,
        96,
        164,
        53,
        72,
        17,
        97,
        2,
        228,
        86,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        50,
        193,
        95,
        194,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        96,
        64,
        81,
        61,
        133,
        130,
        62,
        61,
        144,
        253,
        91,
        96,
        36,
        134,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        65,
        96,
        4,
        82,
        253,
        91,
        96,
        4,
        96,
        64,
        81,
        127,
        45,
        175,
        68,
        45,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        253,
        91,
        131,
        128,
        253,
        91,
        130,
        128,
        253,
        91,
        80,
        128,
        253,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        96,
        32,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        97,
        8,
        166,
        97,
        11,
        238,
        86,
        91,
        96,
        1,
        84,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        131,
        22,
        51,
        20,
        128,
        21,
        97,
        9,
        31,
        87,
        91,
        21,
        97,
        8,
        98,
        87,
        129,
        22,
        145,
        130,
        21,
        21,
        128,
        97,
        9,
        21,
        87,
        91,
        21,
        97,
        8,
        98,
        87,
        97,
        9,
        13,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        146,
        59,
        21,
        97,
        12,
        212,
        86,
        91,
        22,
        23,
        96,
        1,
        85,
        128,
        243,
        91,
        80,
        48,
        131,
        20,
        21,
        97,
        8,
        220,
        86,
        91,
        80,
        48,
        51,
        20,
        97,
        8,
        203,
        86,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        128,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        96,
        32,
        144,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        96,
        32,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        97,
        9,
        155,
        97,
        11,
        238,
        86,
        91,
        96,
        1,
        84,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        131,
        22,
        97,
        8,
        98,
        87,
        129,
        97,
        9,
        232,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        147,
        59,
        21,
        97,
        12,
        212,
        86,
        91,
        22,
        145,
        22,
        23,
        96,
        1,
        85,
        96,
        64,
        81,
        96,
        64,
        129,
        1,
        144,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        145,
        129,
        129,
        16,
        131,
        130,
        17,
        23,
        97,
        10,
        220,
        87,
        127,
        49,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        96,
        32,
        145,
        96,
        64,
        82,
        96,
        1,
        129,
        82,
        1,
        82,
        96,
        64,
        81,
        96,
        32,
        129,
        1,
        145,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        131,
        82,
        127,
        176,
        87,
        171,
        176,
        128,
        49,
        103,
        150,
        72,
        243,
        142,
        96,
        88,
        23,
        105,
        12,
        5,
        163,
        129,
        230,
        236,
        152,
        126,
        93,
        140,
        192,
        96,
        10,
        77,
        42,
        87,
        134,
        96,
        64,
        131,
        1,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        131,
        1,
        82,
        70,
        96,
        128,
        131,
        1,
        82,
        48,
        96,
        160,
        131,
        1,
        82,
        96,
        160,
        130,
        82,
        96,
        192,
        130,
        1,
        144,
        130,
        130,
        16,
        144,
        130,
        17,
        23,
        97,
        10,
        220,
        87,
        96,
        64,
        82,
        81,
        144,
        32,
        129,
        85,
        128,
        243,
        91,
        96,
        36,
        132,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        65,
        96,
        4,
        82,
        253,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        128,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        96,
        32,
        96,
        2,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        128,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        96,
        32,
        96,
        64,
        81,
        127,
        253,
        76,
        156,
        156,
        238,
        168,
        84,
        130,
        195,
        103,
        22,
        38,
        247,
        177,
        198,
        91,
        194,
        35,
        3,
        37,
        184,
        109,
        188,
        176,
        249,
        113,
        50,
        124,
        48,
        98,
        194,
        106,
        129,
        82,
        243,
        91,
        144,
        80,
        52,
        97,
        8,
        106,
        87,
        129,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        8,
        106,
        87,
        96,
        32,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        1,
        84,
        22,
        129,
        82,
        243,
        91,
        96,
        4,
        53,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        22,
        130,
        3,
        97,
        12,
        17,
        87,
        86,
        91,
        96,
        0,
        128,
        253,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        97,
        12,
        42,
        87,
        96,
        64,
        82,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        144,
        96,
        31,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        145,
        1,
        22,
        129,
        1,
        144,
        129,
        16,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        17,
        23,
        97,
        12,
        42,
        87,
        96,
        64,
        82,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        97,
        12,
        42,
        87,
        96,
        31,
        1,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        22,
        96,
        32,
        1,
        144,
        86,
        91,
        21,
        97,
        12,
        219,
        87,
        86,
        91,
        96,
        100,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        17,
        96,
        36,
        130,
        1,
        82,
        127,
        78,
        111,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        111,
        119,
        110,
        101,
        114,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        253,
        91,
        145,
        144,
        145,
        96,
        0,
        131,
        130,
        1,
        147,
        132,
        18,
        145,
        18,
        144,
        128,
        21,
        130,
        22,
        145,
        21,
        22,
        23,
        97,
        13,
        85,
        87,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        61,
        21,
        97,
        13,
        175,
        87,
        61,
        144,
        97,
        13,
        149,
        130,
        97,
        12,
        154,
        86,
        91,
        145,
        97,
        13,
        163,
        96,
        64,
        81,
        147,
        132,
        97,
        12,
        89,
        86,
        91,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        86,
        91,
        96,
        96,
        144,
        86,
        254,
        161,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        17,
        0,
        10,
    ];
    ///The bytecode of the contract.
    pub static MEVWALLETV0_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        21,
        97,
        0,
        26,
        87,
        91,
        80,
        54,
        21,
        97,
        0,
        24,
        87,
        0,
        91,
        0,
        91,
        96,
        0,
        144,
        129,
        53,
        96,
        224,
        28,
        144,
        129,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        11,
        158,
        87,
        80,
        128,
        99,
        174,
        96,
        78,
        69,
        20,
        97,
        11,
        69,
        87,
        128,
        99,
        175,
        254,
        208,
        224,
        20,
        97,
        11,
        9,
        87,
        128,
        99,
        196,
        214,
        109,
        232,
        20,
        97,
        9,
        99,
        87,
        128,
        99,
        220,
        12,
        129,
        181,
        20,
        97,
        9,
        40,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        8,
        110,
        87,
        99,
        243,
        25,
        134,
        118,
        3,
        97,
        0,
        15,
        87,
        97,
        1,
        96,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        97,
        0,
        163,
        97,
        11,
        238,
        86,
        91,
        144,
        96,
        36,
        53,
        145,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        17,
        97,
        8,
        106,
        87,
        54,
        96,
        35,
        132,
        1,
        18,
        21,
        97,
        8,
        106,
        87,
        130,
        96,
        4,
        1,
        53,
        97,
        0,
        208,
        129,
        97,
        12,
        154,
        86,
        91,
        147,
        97,
        0,
        222,
        96,
        64,
        81,
        149,
        134,
        97,
        12,
        89,
        86,
        91,
        129,
        133,
        82,
        54,
        96,
        36,
        131,
        131,
        1,
        1,
        17,
        97,
        8,
        98,
        87,
        129,
        132,
        146,
        96,
        36,
        96,
        32,
        147,
        1,
        131,
        136,
        1,
        55,
        133,
        1,
        1,
        82,
        96,
        100,
        53,
        21,
        21,
        146,
        131,
        96,
        100,
        53,
        3,
        97,
        8,
        102,
        87,
        97,
        1,
        4,
        53,
        144,
        96,
        255,
        130,
        22,
        130,
        3,
        97,
        8,
        98,
        87,
        96,
        132,
        53,
        148,
        97,
        1,
        44,
        96,
        68,
        53,
        135,
        97,
        13,
        57,
        86,
        91,
        146,
        58,
        72,
        3,
        97,
        8,
        56,
        87,
        90,
        150,
        131,
        81,
        96,
        32,
        133,
        1,
        32,
        146,
        96,
        64,
        81,
        147,
        127,
        253,
        76,
        156,
        156,
        238,
        168,
        84,
        130,
        195,
        103,
        22,
        38,
        247,
        177,
        198,
        91,
        194,
        35,
        3,
        37,
        184,
        109,
        188,
        176,
        249,
        113,
        50,
        124,
        48,
        98,
        194,
        106,
        96,
        32,
        134,
        1,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        136,
        22,
        96,
        64,
        134,
        1,
        82,
        96,
        96,
        133,
        1,
        82,
        96,
        68,
        53,
        96,
        128,
        133,
        1,
        82,
        96,
        160,
        132,
        1,
        82,
        96,
        192,
        131,
        1,
        82,
        96,
        164,
        53,
        96,
        224,
        131,
        1,
        82,
        96,
        196,
        53,
        97,
        1,
        0,
        131,
        1,
        82,
        97,
        1,
        32,
        96,
        228,
        53,
        129,
        132,
        1,
        82,
        130,
        82,
        129,
        97,
        1,
        64,
        129,
        1,
        16,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        97,
        1,
        64,
        132,
        1,
        17,
        23,
        97,
        8,
        11,
        87,
        97,
        1,
        64,
        130,
        1,
        96,
        64,
        129,
        144,
        82,
        130,
        81,
        96,
        32,
        132,
        1,
        32,
        135,
        84,
        127,
        25,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        1,
        96,
        134,
        1,
        82,
        97,
        1,
        98,
        133,
        1,
        82,
        97,
        1,
        130,
        132,
        1,
        82,
        96,
        66,
        129,
        82,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        97,
        1,
        192,
        132,
        1,
        144,
        129,
        17,
        145,
        17,
        23,
        97,
        8,
        11,
        87,
        96,
        128,
        97,
        1,
        192,
        131,
        96,
        255,
        137,
        148,
        131,
        96,
        32,
        151,
        1,
        96,
        64,
        82,
        97,
        1,
        64,
        131,
        1,
        81,
        97,
        1,
        96,
        132,
        1,
        32,
        132,
        132,
        1,
        82,
        22,
        97,
        1,
        224,
        130,
        1,
        82,
        97,
        1,
        36,
        53,
        97,
        2,
        0,
        130,
        1,
        82,
        97,
        1,
        68,
        53,
        97,
        2,
        32,
        130,
        1,
        82,
        131,
        128,
        82,
        1,
        96,
        1,
        90,
        250,
        21,
        97,
        8,
        0,
        87,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        132,
        81,
        22,
        128,
        21,
        97,
        7,
        24,
        87,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        1,
        84,
        22,
        129,
        3,
        97,
        7,
        207,
        87,
        80,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        21,
        97,
        7,
        24,
        87,
        96,
        164,
        53,
        21,
        21,
        128,
        97,
        7,
        196,
        87,
        91,
        97,
        7,
        146,
        87,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        66,
        22,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        196,
        53,
        22,
        144,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        196,
        53,
        96,
        64,
        28,
        22,
        145,
        128,
        21,
        21,
        144,
        129,
        97,
        7,
        136,
        87,
        91,
        80,
        97,
        7,
        24,
        87,
        129,
        128,
        21,
        21,
        145,
        130,
        97,
        7,
        126,
        87,
        91,
        80,
        80,
        97,
        7,
        77,
        87,
        80,
        131,
        96,
        68,
        53,
        18,
        97,
        7,
        24,
        87,
        96,
        100,
        53,
        128,
        97,
        7,
        66,
        87,
        91,
        97,
        7,
        24,
        87,
        131,
        96,
        68,
        53,
        19,
        128,
        97,
        7,
        12,
        87,
        91,
        97,
        6,
        218,
        87,
        96,
        2,
        84,
        128,
        96,
        228,
        53,
        16,
        97,
        6,
        169,
        87,
        128,
        96,
        228,
        53,
        17,
        97,
        6,
        120,
        87,
        80,
        131,
        128,
        145,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        148,
        133,
        96,
        2,
        85,
        129,
        96,
        100,
        53,
        96,
        0,
        20,
        97,
        6,
        94,
        87,
        80,
        96,
        32,
        130,
        81,
        146,
        1,
        144,
        90,
        244,
        97,
        3,
        180,
        97,
        13,
        132,
        86,
        91,
        144,
        91,
        21,
        97,
        5,
        203,
        87,
        80,
        96,
        1,
        96,
        228,
        53,
        1,
        128,
        96,
        228,
        53,
        17,
        97,
        5,
        113,
        87,
        96,
        2,
        85,
        96,
        228,
        53,
        127,
        188,
        246,
        166,
        138,
        47,
        144,
        27,
        228,
        162,
        58,
        65,
        181,
        58,
        205,
        118,
        151,
        137,
        58,
        126,
        52,
        222,
        244,
        226,
        138,
        203,
        165,
        132,
        218,
        117,
        40,
        59,
        103,
        132,
        128,
        162,
        90,
        132,
        3,
        147,
        132,
        17,
        97,
        5,
        158,
        87,
        131,
        58,
        2,
        147,
        58,
        133,
        4,
        20,
        58,
        21,
        23,
        21,
        97,
        5,
        158,
        87,
        130,
        147,
        97,
        4,
        26,
        145,
        97,
        13,
        57,
        86,
        91,
        144,
        130,
        130,
        19,
        21,
        97,
        4,
        165,
        87,
        80,
        110,
        140,
        67,
        239,
        192,
        20,
        116,
        108,
        35,
        0,
        73,
        227,
        48,
        3,
        156,
        179,
        144,
        129,
        59,
        21,
        97,
        4,
        161,
        87,
        130,
        145,
        96,
        36,
        131,
        146,
        96,
        64,
        81,
        148,
        133,
        147,
        132,
        146,
        127,
        89,
        146,
        191,
        221,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        82,
        96,
        4,
        132,
        1,
        82,
        90,
        241,
        128,
        21,
        97,
        4,
        150,
        87,
        97,
        4,
        131,
        87,
        80,
        80,
        128,
        243,
        91,
        97,
        4,
        140,
        144,
        97,
        12,
        22,
        86,
        91,
        97,
        4,
        147,
        87,
        128,
        243,
        91,
        128,
        253,
        91,
        96,
        64,
        81,
        61,
        132,
        130,
        62,
        61,
        144,
        253,
        91,
        80,
        80,
        253,
        91,
        145,
        129,
        144,
        3,
        145,
        127,
        128,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        20,
        96,
        1,
        22,
        97,
        5,
        113,
        87,
        130,
        5,
        3,
        97,
        5,
        68,
        87,
        129,
        144,
        110,
        140,
        67,
        239,
        192,
        20,
        116,
        108,
        35,
        0,
        73,
        227,
        48,
        3,
        156,
        179,
        128,
        59,
        21,
        97,
        4,
        161,
        87,
        96,
        36,
        131,
        146,
        96,
        64,
        81,
        148,
        133,
        147,
        132,
        146,
        127,
        248,
        229,
        193,
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        82,
        96,
        4,
        132,
        1,
        82,
        90,
        241,
        128,
        21,
        97,
        4,
        150,
        87,
        97,
        5,
        56,
        87,
        80,
        128,
        243,
        91,
        97,
        5,
        65,
        144,
        97,
        12,
        22,
        86,
        91,
        128,
        243,
        91,
        96,
        36,
        130,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        17,
        96,
        4,
        82,
        253,
        91,
        96,
        36,
        132,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        17,
        96,
        4,
        82,
        253,
        91,
        96,
        36,
        131,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        17,
        96,
        4,
        82,
        253,
        91,
        131,
        144,
        96,
        64,
        81,
        128,
        146,
        127,
        168,
        21,
        153,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        32,
        96,
        4,
        131,
        1,
        82,
        130,
        81,
        146,
        131,
        96,
        36,
        132,
        1,
        82,
        129,
        91,
        132,
        129,
        16,
        97,
        6,
        70,
        87,
        80,
        80,
        96,
        31,
        131,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        146,
        96,
        68,
        128,
        150,
        134,
        1,
        1,
        82,
        1,
        22,
        129,
        1,
        3,
        1,
        144,
        253,
        91,
        96,
        32,
        130,
        130,
        1,
        129,
        1,
        81,
        96,
        68,
        136,
        132,
        1,
        1,
        82,
        134,
        148,
        80,
        1,
        97,
        6,
        7,
        86,
        91,
        128,
        81,
        146,
        80,
        96,
        32,
        1,
        144,
        52,
        144,
        90,
        241,
        97,
        6,
        114,
        97,
        13,
        132,
        86,
        91,
        144,
        97,
        3,
        182,
        86,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        41,
        154,
        167,
        49,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        106,
        201,
        100,
        176,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        96,
        36,
        96,
        64,
        81,
        127,
        115,
        136,
        51,
        135,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        68,
        53,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        80,
        96,
        68,
        53,
        52,
        20,
        21,
        97,
        3,
        84,
        86,
        91,
        96,
        4,
        96,
        64,
        81,
        127,
        160,
        77,
        152,
        31,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        253,
        91,
        80,
        96,
        68,
        53,
        21,
        21,
        97,
        3,
        69,
        86,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        8,
        86,
        126,
        85,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        16,
        144,
        80,
        129,
        56,
        97,
        3,
        44,
        86,
        91,
        144,
        80,
        129,
        17,
        56,
        97,
        3,
        28,
        86,
        91,
        96,
        36,
        96,
        64,
        81,
        127,
        116,
        135,
        141,
        88,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        164,
        53,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        80,
        96,
        164,
        53,
        72,
        17,
        97,
        2,
        228,
        86,
        91,
        96,
        36,
        144,
        96,
        64,
        81,
        144,
        127,
        50,
        193,
        95,
        194,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        82,
        96,
        4,
        130,
        1,
        82,
        253,
        91,
        96,
        64,
        81,
        61,
        133,
        130,
        62,
        61,
        144,
        253,
        91,
        96,
        36,
        134,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        65,
        96,
        4,
        82,
        253,
        91,
        96,
        4,
        96,
        64,
        81,
        127,
        45,
        175,
        68,
        45,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        253,
        91,
        131,
        128,
        253,
        91,
        130,
        128,
        253,
        91,
        80,
        128,
        253,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        96,
        32,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        97,
        8,
        166,
        97,
        11,
        238,
        86,
        91,
        96,
        1,
        84,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        131,
        22,
        51,
        20,
        128,
        21,
        97,
        9,
        31,
        87,
        91,
        21,
        97,
        8,
        98,
        87,
        129,
        22,
        145,
        130,
        21,
        21,
        128,
        97,
        9,
        21,
        87,
        91,
        21,
        97,
        8,
        98,
        87,
        97,
        9,
        13,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        146,
        59,
        21,
        97,
        12,
        212,
        86,
        91,
        22,
        23,
        96,
        1,
        85,
        128,
        243,
        91,
        80,
        48,
        131,
        20,
        21,
        97,
        8,
        220,
        86,
        91,
        80,
        48,
        51,
        20,
        97,
        8,
        203,
        86,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        128,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        96,
        32,
        144,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        96,
        32,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        97,
        9,
        155,
        97,
        11,
        238,
        86,
        91,
        96,
        1,
        84,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        131,
        22,
        97,
        8,
        98,
        87,
        129,
        97,
        9,
        232,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        147,
        59,
        21,
        97,
        12,
        212,
        86,
        91,
        22,
        145,
        22,
        23,
        96,
        1,
        85,
        96,
        64,
        81,
        96,
        64,
        129,
        1,
        144,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        145,
        129,
        129,
        16,
        131,
        130,
        17,
        23,
        97,
        10,
        220,
        87,
        127,
        49,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        96,
        32,
        145,
        96,
        64,
        82,
        96,
        1,
        129,
        82,
        1,
        82,
        96,
        64,
        81,
        96,
        32,
        129,
        1,
        145,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        131,
        82,
        127,
        176,
        87,
        171,
        176,
        128,
        49,
        103,
        150,
        72,
        243,
        142,
        96,
        88,
        23,
        105,
        12,
        5,
        163,
        129,
        230,
        236,
        152,
        126,
        93,
        140,
        192,
        96,
        10,
        77,
        42,
        87,
        134,
        96,
        64,
        131,
        1,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        131,
        1,
        82,
        70,
        96,
        128,
        131,
        1,
        82,
        48,
        96,
        160,
        131,
        1,
        82,
        96,
        160,
        130,
        82,
        96,
        192,
        130,
        1,
        144,
        130,
        130,
        16,
        144,
        130,
        17,
        23,
        97,
        10,
        220,
        87,
        96,
        64,
        82,
        81,
        144,
        32,
        129,
        85,
        128,
        243,
        91,
        96,
        36,
        132,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        65,
        96,
        4,
        82,
        253,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        128,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        96,
        32,
        96,
        2,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        80,
        52,
        97,
        4,
        147,
        87,
        128,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        4,
        147,
        87,
        96,
        32,
        96,
        64,
        81,
        127,
        253,
        76,
        156,
        156,
        238,
        168,
        84,
        130,
        195,
        103,
        22,
        38,
        247,
        177,
        198,
        91,
        194,
        35,
        3,
        37,
        184,
        109,
        188,
        176,
        249,
        113,
        50,
        124,
        48,
        98,
        194,
        106,
        129,
        82,
        243,
        91,
        144,
        80,
        52,
        97,
        8,
        106,
        87,
        129,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        252,
        54,
        1,
        18,
        97,
        8,
        106,
        87,
        96,
        32,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        96,
        1,
        84,
        22,
        129,
        82,
        243,
        91,
        96,
        4,
        53,
        144,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        22,
        130,
        3,
        97,
        12,
        17,
        87,
        86,
        91,
        96,
        0,
        128,
        253,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        97,
        12,
        42,
        87,
        96,
        64,
        82,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        144,
        96,
        31,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        145,
        1,
        22,
        129,
        1,
        144,
        129,
        16,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        17,
        23,
        97,
        12,
        42,
        87,
        96,
        64,
        82,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        97,
        12,
        42,
        87,
        96,
        31,
        1,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        22,
        96,
        32,
        1,
        144,
        86,
        91,
        21,
        97,
        12,
        219,
        87,
        86,
        91,
        96,
        100,
        96,
        64,
        81,
        127,
        8,
        195,
        121,
        160,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        17,
        96,
        36,
        130,
        1,
        82,
        127,
        78,
        111,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        111,
        119,
        110,
        101,
        114,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        253,
        91,
        145,
        144,
        145,
        96,
        0,
        131,
        130,
        1,
        147,
        132,
        18,
        145,
        18,
        144,
        128,
        21,
        130,
        22,
        145,
        21,
        22,
        23,
        97,
        13,
        85,
        87,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        61,
        21,
        97,
        13,
        175,
        87,
        61,
        144,
        97,
        13,
        149,
        130,
        97,
        12,
        154,
        86,
        91,
        145,
        97,
        13,
        163,
        96,
        64,
        81,
        147,
        132,
        97,
        12,
        89,
        86,
        91,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        86,
        91,
        96,
        96,
        144,
        86,
        254,
        161,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        17,
        0,
        10,
    ];
    ///The deployed bytecode of the contract.
    pub static MEVWALLETV0_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct MevWalletV0<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for MevWalletV0<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for MevWalletV0<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for MevWalletV0<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for MevWalletV0<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(MevWalletV0)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> MevWalletV0<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    MEVWALLETV0_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                MEVWALLETV0_ABI.clone(),
                MEVWALLETV0_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `TX_TYPEHASH` (0xae604e45) function
        pub fn tx_typehash(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([174, 96, 78, 69], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `_DOMAIN_SEPARATOR` (0xdc0c81b5) function
        pub fn domain_separator(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([220, 12, 129, 181], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `initialize` (0xc4d66de8) function
        pub fn initialize(
            &self,
            new_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([196, 214, 109, 232], new_owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `mevTx` (0xf3198676) function
        pub fn mev_tx(
            &self,
            to: ::ethers::core::types::Address,
            data: ::ethers::core::types::Bytes,
            value: ::ethers::core::types::I256,
            delegate: bool,
            tip: ::ethers::core::types::I256,
            max_base_fee: ::ethers::core::types::U256,
            timing: ::ethers::core::types::U256,
            n: ::ethers::core::types::U256,
            v: u8,
            r: [u8; 32],
            s: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [243, 25, 134, 118],
                    (to, data, value, delegate, tip, max_base_fee, timing, n, v, r, s),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `nonce` (0xaffed0e0) function
        pub fn nonce(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([175, 254, 208, 224], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `owner` (0x8da5cb5b) function
        pub fn owner(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([141, 165, 203, 91], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferOwnership` (0xf2fde38b) function
        pub fn transfer_ownership(
            &self,
            new_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([242, 253, 227, 139], new_owner)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Executed` event
        pub fn executed_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ExecutedFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ExecutedFilter,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for MevWalletV0<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `ExactBaseFee` with signature `ExactBaseFee()` and selector `0x2daf442d`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "ExactBaseFee", abi = "ExactBaseFee()")]
    pub struct ExactBaseFee;
    ///Custom Error type `HighBaseFee` with signature `HighBaseFee(uint256)` and selector `0x74878d58`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "HighBaseFee", abi = "HighBaseFee(uint256)")]
    pub struct HighBaseFee(pub ::ethers::core::types::U256);
    ///Custom Error type `MissingNonce` with signature `MissingNonce(uint256)` and selector `0x299aa731`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "MissingNonce", abi = "MissingNonce(uint256)")]
    pub struct MissingNonce(pub ::ethers::core::types::U256);
    ///Custom Error type `NotBefore` with signature `NotBefore(uint64)` and selector `0x08567e55`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "NotBefore", abi = "NotBefore(uint64)")]
    pub struct NotBefore(pub u64);
    ///Custom Error type `PermanentlyInvalid` with signature `PermanentlyInvalid()` and selector `0xa04d981f`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "PermanentlyInvalid", abi = "PermanentlyInvalid()")]
    pub struct PermanentlyInvalid;
    ///Custom Error type `ProvideValue` with signature `ProvideValue(uint256)` and selector `0x73883387`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "ProvideValue", abi = "ProvideValue(uint256)")]
    pub struct ProvideValue(pub ::ethers::core::types::U256);
    ///Custom Error type `Reverted` with signature `Reverted(bytes)` and selector `0xa8159920`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "Reverted", abi = "Reverted(bytes)")]
    pub struct Reverted(pub ::ethers::core::types::Bytes);
    ///Custom Error type `UsedNonce` with signature `UsedNonce(uint256)` and selector `0x6ac964b0`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "UsedNonce", abi = "UsedNonce(uint256)")]
    pub struct UsedNonce(pub ::ethers::core::types::U256);
    ///Custom Error type `WrongSigner` with signature `WrongSigner(address)` and selector `0x32c15fc2`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "WrongSigner", abi = "WrongSigner(address)")]
    pub struct WrongSigner(pub ::ethers::core::types::Address);
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum MevWalletV0Errors {
        ExactBaseFee(ExactBaseFee),
        HighBaseFee(HighBaseFee),
        MissingNonce(MissingNonce),
        NotBefore(NotBefore),
        PermanentlyInvalid(PermanentlyInvalid),
        ProvideValue(ProvideValue),
        Reverted(Reverted),
        UsedNonce(UsedNonce),
        WrongSigner(WrongSigner),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for MevWalletV0Errors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <ExactBaseFee as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ExactBaseFee(decoded));
            }
            if let Ok(decoded)
                = <HighBaseFee as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::HighBaseFee(decoded));
            }
            if let Ok(decoded)
                = <MissingNonce as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MissingNonce(decoded));
            }
            if let Ok(decoded)
                = <NotBefore as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NotBefore(decoded));
            }
            if let Ok(decoded)
                = <PermanentlyInvalid as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::PermanentlyInvalid(decoded));
            }
            if let Ok(decoded)
                = <ProvideValue as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ProvideValue(decoded));
            }
            if let Ok(decoded)
                = <Reverted as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Reverted(decoded));
            }
            if let Ok(decoded)
                = <UsedNonce as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UsedNonce(decoded));
            }
            if let Ok(decoded)
                = <WrongSigner as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::WrongSigner(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for MevWalletV0Errors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::ExactBaseFee(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::HighBaseFee(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MissingNonce(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::NotBefore(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PermanentlyInvalid(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ProvideValue(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Reverted(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UsedNonce(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::WrongSigner(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for MevWalletV0Errors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <ExactBaseFee as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <HighBaseFee as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <MissingNonce as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <NotBefore as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <PermanentlyInvalid as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <ProvideValue as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <Reverted as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <UsedNonce as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <WrongSigner as ::ethers::contract::EthError>::selector() => true,
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for MevWalletV0Errors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::ExactBaseFee(element) => ::core::fmt::Display::fmt(element, f),
                Self::HighBaseFee(element) => ::core::fmt::Display::fmt(element, f),
                Self::MissingNonce(element) => ::core::fmt::Display::fmt(element, f),
                Self::NotBefore(element) => ::core::fmt::Display::fmt(element, f),
                Self::PermanentlyInvalid(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ProvideValue(element) => ::core::fmt::Display::fmt(element, f),
                Self::Reverted(element) => ::core::fmt::Display::fmt(element, f),
                Self::UsedNonce(element) => ::core::fmt::Display::fmt(element, f),
                Self::WrongSigner(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for MevWalletV0Errors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<ExactBaseFee> for MevWalletV0Errors {
        fn from(value: ExactBaseFee) -> Self {
            Self::ExactBaseFee(value)
        }
    }
    impl ::core::convert::From<HighBaseFee> for MevWalletV0Errors {
        fn from(value: HighBaseFee) -> Self {
            Self::HighBaseFee(value)
        }
    }
    impl ::core::convert::From<MissingNonce> for MevWalletV0Errors {
        fn from(value: MissingNonce) -> Self {
            Self::MissingNonce(value)
        }
    }
    impl ::core::convert::From<NotBefore> for MevWalletV0Errors {
        fn from(value: NotBefore) -> Self {
            Self::NotBefore(value)
        }
    }
    impl ::core::convert::From<PermanentlyInvalid> for MevWalletV0Errors {
        fn from(value: PermanentlyInvalid) -> Self {
            Self::PermanentlyInvalid(value)
        }
    }
    impl ::core::convert::From<ProvideValue> for MevWalletV0Errors {
        fn from(value: ProvideValue) -> Self {
            Self::ProvideValue(value)
        }
    }
    impl ::core::convert::From<Reverted> for MevWalletV0Errors {
        fn from(value: Reverted) -> Self {
            Self::Reverted(value)
        }
    }
    impl ::core::convert::From<UsedNonce> for MevWalletV0Errors {
        fn from(value: UsedNonce) -> Self {
            Self::UsedNonce(value)
        }
    }
    impl ::core::convert::From<WrongSigner> for MevWalletV0Errors {
        fn from(value: WrongSigner) -> Self {
            Self::WrongSigner(value)
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Executed", abi = "Executed(uint256)")]
    pub struct ExecutedFilter {
        #[ethevent(indexed)]
        pub nonce: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `TX_TYPEHASH` function with signature `TX_TYPEHASH()` and selector `0xae604e45`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "TX_TYPEHASH", abi = "TX_TYPEHASH()")]
    pub struct TxTypehashCall;
    ///Container type for all input parameters for the `_DOMAIN_SEPARATOR` function with signature `_DOMAIN_SEPARATOR()` and selector `0xdc0c81b5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "_DOMAIN_SEPARATOR", abi = "_DOMAIN_SEPARATOR()")]
    pub struct DomainSeparatorCall;
    ///Container type for all input parameters for the `initialize` function with signature `initialize(address)` and selector `0xc4d66de8`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "initialize", abi = "initialize(address)")]
    pub struct InitializeCall {
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `mevTx` function with signature `mevTx(address,bytes,int256,bool,int256,uint256,uint256,uint256,uint8,bytes32,bytes32)` and selector `0xf3198676`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "mevTx",
        abi = "mevTx(address,bytes,int256,bool,int256,uint256,uint256,uint256,uint8,bytes32,bytes32)"
    )]
    pub struct MevTxCall {
        pub to: ::ethers::core::types::Address,
        pub data: ::ethers::core::types::Bytes,
        pub value: ::ethers::core::types::I256,
        pub delegate: bool,
        pub tip: ::ethers::core::types::I256,
        pub max_base_fee: ::ethers::core::types::U256,
        pub timing: ::ethers::core::types::U256,
        pub n: ::ethers::core::types::U256,
        pub v: u8,
        pub r: [u8; 32],
        pub s: [u8; 32],
    }
    ///Container type for all input parameters for the `nonce` function with signature `nonce()` and selector `0xaffed0e0`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "nonce", abi = "nonce()")]
    pub struct NonceCall;
    ///Container type for all input parameters for the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "owner", abi = "owner()")]
    pub struct OwnerCall;
    ///Container type for all input parameters for the `transferOwnership` function with signature `transferOwnership(address)` and selector `0xf2fde38b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferOwnership", abi = "transferOwnership(address)")]
    pub struct TransferOwnershipCall {
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum MevWalletV0Calls {
        TxTypehash(TxTypehashCall),
        DomainSeparator(DomainSeparatorCall),
        Initialize(InitializeCall),
        MevTx(MevTxCall),
        Nonce(NonceCall),
        Owner(OwnerCall),
        TransferOwnership(TransferOwnershipCall),
    }
    impl ::ethers::core::abi::AbiDecode for MevWalletV0Calls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <TxTypehashCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TxTypehash(decoded));
            }
            if let Ok(decoded)
                = <DomainSeparatorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DomainSeparator(decoded));
            }
            if let Ok(decoded)
                = <InitializeCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Initialize(decoded));
            }
            if let Ok(decoded)
                = <MevTxCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MevTx(decoded));
            }
            if let Ok(decoded)
                = <NonceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Nonce(decoded));
            }
            if let Ok(decoded)
                = <OwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Owner(decoded));
            }
            if let Ok(decoded)
                = <TransferOwnershipCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TransferOwnership(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for MevWalletV0Calls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::TxTypehash(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::DomainSeparator(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Initialize(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MevTx(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Nonce(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Owner(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::TransferOwnership(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for MevWalletV0Calls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::TxTypehash(element) => ::core::fmt::Display::fmt(element, f),
                Self::DomainSeparator(element) => ::core::fmt::Display::fmt(element, f),
                Self::Initialize(element) => ::core::fmt::Display::fmt(element, f),
                Self::MevTx(element) => ::core::fmt::Display::fmt(element, f),
                Self::Nonce(element) => ::core::fmt::Display::fmt(element, f),
                Self::Owner(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferOwnership(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<TxTypehashCall> for MevWalletV0Calls {
        fn from(value: TxTypehashCall) -> Self {
            Self::TxTypehash(value)
        }
    }
    impl ::core::convert::From<DomainSeparatorCall> for MevWalletV0Calls {
        fn from(value: DomainSeparatorCall) -> Self {
            Self::DomainSeparator(value)
        }
    }
    impl ::core::convert::From<InitializeCall> for MevWalletV0Calls {
        fn from(value: InitializeCall) -> Self {
            Self::Initialize(value)
        }
    }
    impl ::core::convert::From<MevTxCall> for MevWalletV0Calls {
        fn from(value: MevTxCall) -> Self {
            Self::MevTx(value)
        }
    }
    impl ::core::convert::From<NonceCall> for MevWalletV0Calls {
        fn from(value: NonceCall) -> Self {
            Self::Nonce(value)
        }
    }
    impl ::core::convert::From<OwnerCall> for MevWalletV0Calls {
        fn from(value: OwnerCall) -> Self {
            Self::Owner(value)
        }
    }
    impl ::core::convert::From<TransferOwnershipCall> for MevWalletV0Calls {
        fn from(value: TransferOwnershipCall) -> Self {
            Self::TransferOwnership(value)
        }
    }
    ///Container type for all return fields from the `TX_TYPEHASH` function with signature `TX_TYPEHASH()` and selector `0xae604e45`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TxTypehashReturn(pub [u8; 32]);
    ///Container type for all return fields from the `_DOMAIN_SEPARATOR` function with signature `_DOMAIN_SEPARATOR()` and selector `0xdc0c81b5`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DomainSeparatorReturn(pub [u8; 32]);
    ///Container type for all return fields from the `nonce` function with signature `nonce()` and selector `0xaffed0e0`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NonceReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnerReturn(pub ::ethers::core::types::Address);
}
